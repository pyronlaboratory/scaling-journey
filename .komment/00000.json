[
  {
    "name": "App.tsx",
    "path": "App.tsx",
    "content": {
      "structured": {
        "description": "A React application that generates a user activity report. The report includes a list of users with their name, role, address, and activities such as login, logout, and purchase. The code uses an enum for user roles, a tuple type for user activities, and an intersection type for the User object.",
        "items": [
          {
            "id": "bd010041-eabe-37b3-1b44-efe824488c21",
            "ancestors": [],
            "description": "Converts a user activity object into a string representation. It takes an array-like object with three properties: username, action, and date. The function returns a formatted string combining these properties, displaying the username, action, and date of the activity in a human-readable format.",
            "params": [
              {
                "name": "activity",
                "optional": false,
                "type_name": "UserActivity",
                "description": "Used to format user activity information."
              }
            ],
            "returns": {
              "type_name": "string",
              "description": "A formatted message indicating the username, action and date of an activity."
            },
            "usage": {
              "language": "typescript",
              "code": "const userActivity = [\"John\", \"edited\", new Date(\"2021-08-25T14:30:00Z\")];\nformatActivity(userActivity);\n",
              "description": ""
            },
            "name": "formatActivity",
            "location": {
              "start": 43,
              "insert": 43,
              "offset": " ",
              "indent": 0,
              "comment": null
            },
            "item_type": "function",
            "length": 4,
            "docLength": null
          },
          {
            "id": "1840ec05-01f0-7fbd-b94e-21d24279c7c2",
            "ancestors": [],
            "description": "Filters users based on their age and activity status, then maps them to a report format displaying user information and their activities. The report is rendered as an unordered list with each user's details and activities listed individually.",
            "params": [
              {
                "name": "obj",
                "optional": false,
                "type_name": "object",
                "description": "2 level nested. It contains two properties: 'users' and 'options'. The 'users' property expects an array, while the 'options' property is an object with default values for 'includeInactive' and 'activityFilter'."
              },
              {
                "name": "obj.users",
                "optional": false,
                "type_name": "UserActivityReportProps['users']",
                "description": "An array of user objects."
              },
              {
                "name": "obj.minAge",
                "optional": true,
                "type_name": "number",
                "description": "Used to filter users by age.",
                "default_value": "18"
              },
              {
                "name": "obj.options",
                "optional": false,
                "type_name": "{\n    includeInactive = defaultOptions.includeInactive,\n    activityFilter = defaultOptions.activityFilter,\n  } = defaultOptions",
                "description": "Optional, which means that if it's not passed as an argument when calling this function, then it will have its default values."
              }
            ],
            "returns": {
              "type_name": "JSX.Element",
              "description": "A React component that represents a user activity report. The report consists of a list of user cards with their name, role, age, address and activities. Each user card includes details about the user's status and the activities they are involved in."
            },
            "usage": {
              "language": "typescript",
              "code": "const users = [\n  { name: 'John', role: 'Admin', age: 25, active: true, activities: ['Swimming', 'Golf'] },\n  { name: 'Jane', role: 'User', age: 30, active: false, activities: [] },\n];\n\n<UserActivityReport users={users} />\n",
              "description": ""
            },
            "name": "UserActivityReport",
            "location": {
              "start": 48,
              "insert": 48,
              "offset": " ",
              "indent": 0,
              "comment": null
            },
            "item_type": "function",
            "length": 36,
            "docLength": null
          },
          {
            "id": "39a4a38b-ae40-ee92-1c46-0eafb8ddc23a",
            "ancestors": [],
            "description": "Renders a user interface with an `<h1>` element displaying \"User Activity Report\". It also renders a `UserActivityReport` component, passing in `users`, `minAge=18`, and an object containing options: `includeInactive=true` and a filter function that excludes 'logout' actions.",
            "params": [],
            "usage": {
              "language": "typescript",
              "code": "const users = [\n    { name: 'John', age: 25, action: 'login' },\n    { name: 'Jane', age: 30, action: 'logout' }\n];\n\n<App users={users} />\n",
              "description": "\nPasses an array of user objects to the component."
            },
            "name": "App",
            "location": {
              "start": 122,
              "insert": 122,
              "offset": " ",
              "indent": 0,
              "comment": null
            },
            "item_type": "function",
            "length": 6,
            "docLength": null
          }
        ]
      }
    }
  },
  {
    "name": "source.js",
    "path": "source.js",
    "content": {
      "structured": {
        "description": "A generateUserReport function that filters and transforms an array of users based on input parameters. The function uses JavaScript's built-in Date object and regular expressions to format dates according to a specified date format. It then returns an array of user objects with their name, age, active status, and registration date formatted as per the provided date format.",
        "items": [
          {
            "id": "d53cbba0-24f7-218c-4847-20615ae69f95",
            "ancestors": [],
            "description": "Generates a report for users based on their age and activity status. It filters out users under a specified minimum age (default is 18) and inactive users unless explicitly included. The report includes the user's name, age, activity status, and registration date in a formatted string.",
            "params": [
              {
                "name": "users",
                "optional": false,
                "type_name": "User[]",
                "description": "Required for report generation."
              },
              {
                "name": "minAge",
                "optional": true,
                "type_name": "number",
                "description": "Used to filter users based on their age.",
                "default_value": "18"
              },
              {
                "name": "options",
                "optional": true,
                "type_name": "object",
                "description": "Optional.",
                "default_value": "{}"
              }
            ],
            "returns": {
              "type_name": "object",
              "description": "An array of objects containing properties name, age, active and registrationDate for users who meet specified conditions."
            },
            "usage": {
              "language": "javascript",
              "code": "const users = [\n  { name: 'John', age: 25, active: true, registrationDate: new Date('2020-01-01') },\n  { name: 'Jane', age: 30, active: false, registrationDate: new Date('2019-06-15') }\n];\n\nconst report = generateUserReport(users);\n",
              "description": ""
            },
            "name": "generateUserReport",
            "location": {
              "start": 1,
              "insert": 1,
              "offset": " ",
              "indent": 0,
              "comment": null
            },
            "item_type": "function",
            "length": 24,
            "docLength": null
          },
          {
            "id": "cc00b37d-10a0-bebc-3444-f2ae98deeef4",
            "ancestors": [
              "d53cbba0-24f7-218c-4847-20615ae69f95"
            ],
            "description": "Takes a date and a format string as input, converts the date to a human-readable format, and returns a string representing the formatted date based on the provided format string.",
            "params": [
              {
                "name": "date",
                "optional": false,
                "type_name": "number",
                "description": "The date to be formatted."
              },
              {
                "name": "format",
                "optional": false,
                "type_name": "string",
                "description": "Used to define the output date format."
              }
            ],
            "returns": {
              "type_name": "string",
              "description": "A formatted date representation according to the specified format, replacing placeholders 'YYYY' with the year, 'MM' with the month and 'DD' with the day in the original date."
            },
            "usage": {
              "language": "javascript",
              "code": "var result = formatDate('2021-05-27', 'YYYY-MM-DD');\n",
              "description": "\nReturn a string formatted according to the provided date and format."
            },
            "name": "formatDate",
            "location": {
              "start": 4,
              "insert": 4,
              "offset": " ",
              "indent": 2,
              "comment": null
            },
            "item_type": "function",
            "length": 11,
            "docLength": null
          }
        ]
      }
    }
  },
  {
    "name": "source.py",
    "path": "source.py",
    "content": {
      "structured": {
        "description": "An `User` class with attributes such as name, age, active status, role and address along with a list of activities performed by the user. It also defines two functions: one to format user activity data into a readable string, and another to generate a report for users above a certain age and optionally including inactive users and filtering out specific types of activities.",
        "items": [
          {
            "id": "5a952bc7-9731-66a4-4143-f0d774517d5f",
            "ancestors": [],
            "description": "Defines an enumeration with three user role types: `ADMIN`, `USER`, and `GUEST`. Each type is represented by a descriptive string. This class provides a way to categorize users based on their roles, allowing for easy referencing and comparison of roles in the code.",
            "attributes": [
              {
                "name": "ADMIN",
                "type_name": "UserRole",
                "description": "Assigned the string value \"Admin\". It represents a role with administrative privileges in the system."
              },
              {
                "name": "USER",
                "type_name": "UserRole",
                "description": "4 characters long, representing a role with privileges. It has a string value \"User\"."
              },
              {
                "name": "GUEST",
                "type_name": "str",
                "description": "6 characters long, having the value \"Guest\". It represents a role that grants limited access to system resources and functionality."
              }
            ],
            "name": "UserRole",
            "location": {
              "start": 5,
              "insert": 6,
              "offset": " ",
              "indent": 4,
              "comment": null
            },
            "item_type": "class",
            "length": 4,
            "docLength": null
          },
          {
            "id": "767dddd7-c1ac-f4b0-3b43-12858e4a5e1c",
            "ancestors": [],
            "description": "Initializes a user with specified attributes: name, age, activity status, role, and associated data (address) and activities. The attributes are set as instance variables for later use. This class serves as a container to hold the relevant information about a user in an application.",
            "attributes": [
              {
                "name": "name",
                "type_name": "str",
                "description": "Initialized with a value provided as input to the class constructor. It represents the name of the user."
              },
              {
                "name": "age",
                "type_name": "int",
                "description": "Initialized during object creation with a value provided by the user. It represents the age of the user."
              },
              {
                "name": "active",
                "type_name": "bool",
                "description": "Initialized with a boolean value. It represents whether the user's account is active or not."
              },
              {
                "name": "role",
                "type_name": "UserRole",
                "description": "Initialized with a value provided by the user. It represents the role or position held by the user within a system, organization, or community."
              },
              {
                "name": "address",
                "type_name": "Dict[str,str]",
                "description": "Initialized with a dictionary where keys are strings and values are also strings, representing user's address."
              },
              {
                "name": "activities",
                "type_name": "List[UserActivity]",
                "description": "Initialized with a list of `UserActivity` objects. This allows for a user to have multiple activities associated with their account, such as hobbies or interests."
              }
            ],
            "name": "User",
            "location": {
              "start": 12,
              "insert": 13,
              "offset": " ",
              "indent": 4,
              "comment": null
            },
            "item_type": "class",
            "length": 8,
            "docLength": null
          },
          {
            "id": "f63a7968-f03c-0cb7-2e48-131e18d4c0de",
            "ancestors": [
              "767dddd7-c1ac-f4b0-3b43-12858e4a5e1c"
            ],
            "description": "Initializes an object with various attributes, including name, age, activity status, role, address and activities. These attributes are assigned values provided as parameters to the constructor.",
            "params": [
              {
                "name": "name",
                "type_name": "str",
                "description": "Used to set the name attribute of the class instance."
              },
              {
                "name": "age",
                "type_name": "int",
                "description": "Assigned to an instance variable named `age`. It represents the age of the user."
              },
              {
                "name": "active",
                "type_name": "bool",
                "description": "Used to set or get whether the user is active. It defaults to None but should be provided with either True or False when creating an instance of this class."
              },
              {
                "name": "role",
                "type_name": "UserRole",
                "description": "Assigned to an instance variable named `self.role`."
              },
              {
                "name": "address",
                "type_name": "Dict[str, str]",
                "description": "Initialized with an empty dictionary. It represents a user's address as a collection of key-value pairs where keys are strings (e.g., street, city) and values are also strings."
              },
              {
                "name": "activities",
                "type_name": "List[UserActivity]",
                "description": "Expected to be initialized with a list of objects, each representing an activity of a user."
              }
            ],
            "usage": {
              "language": "python",
              "code": "user = User(\"John Doe\", 30, True, UserRole.ADMINISTRATOR, {\"street\": \"123 Main St\", \"city\": \"Anytown\"}, [UserActivity.SPORTS, UserActivity.MUSIC])",
              "description": ""
            },
            "name": "__init__",
            "location": {
              "start": 13,
              "insert": 14,
              "offset": " ",
              "indent": 8,
              "comment": null
            },
            "item_type": "constructor",
            "length": 7,
            "docLength": null
          },
          {
            "id": "c47826c1-ac5f-2c80-574d-666aa90cacb3",
            "ancestors": [],
            "description": "Converts a tuple containing user information into a formatted string, displaying the username, action taken, and date of activity in 'YYYY-MM-DD' format.",
            "params": [
              {
                "name": "activity",
                "type_name": "UserActivity",
                "description": "Expected to be an iterable, likely a tuple or list, containing at least three elements: username, action, and date."
              }
            ],
            "returns": {
              "type_name": "str",
              "description": "A formatted string representing an activity by a user, comprising the username, action taken, and date on which it was performed."
            },
            "usage": {
              "language": "python",
              "code": "activity = (\"John\", \"logged in\", datetime.date(2023, 3, 20))\noutput = format_activity(activity)\n",
              "description": ""
            },
            "name": "format_activity",
            "location": {
              "start": 21,
              "insert": 22,
              "offset": " ",
              "indent": 4,
              "comment": null
            },
            "item_type": "function",
            "length": 3,
            "docLength": null
          },
          {
            "id": "d6de09c7-f163-039f-6241-a8cc4619d801",
            "ancestors": [],
            "description": "Generates a list of dictionaries representing user activity reports from a given list of users, filtered by age and active/inactive status, with optional inclusion of inactive users and custom activity filtering.",
            "params": [
              {
                "name": "users",
                "type_name": "List[User]",
                "description": "Mandatory. It represents a collection of User objects."
              },
              {
                "name": "min_age",
                "type_name": "int",
                "description": "18 by default. It filters users based on their age, only including those who are at least this age in the report.",
                "default_value": "18"
              },
              {
                "name": "options",
                "type_name": "Optional[Dict[str, Optional[Callable[[UserActivity], bool]]]]",
                "description": "0-indexed. It specifies filters for the report generation: whether to include inactive users and an activity filter.",
                "default_value": "None"
              }
            ],
            "returns": {
              "type_name": "List[Dict[str, str]]",
              "description": "A list of dictionaries representing user activity reports. Each dictionary contains information about a user such as their name, age, role, address, and activities they have performed."
            },
            "usage": {
              "language": "python",
              "code": "users = [User('John', 25, True, 'admin', {'street': '123', 'city': 'New York', 'country': 'USA'}, [Activity('swimming'), Activity('running')]), \n         User('Alice', 30, False, 'moderator', {'street': '456', 'city': 'London', 'country': 'UK'}, [Activity('reading'), Activity('writing')])]\nfiltered_users = generate_user_activity_report(users)\n",
              "description": ""
            },
            "name": "generate_user_activity_report",
            "location": {
              "start": 25,
              "insert": 30,
              "offset": " ",
              "indent": 4,
              "comment": null
            },
            "item_type": "function",
            "length": 25,
            "docLength": null
          }
        ]
      }
    }
  }
]